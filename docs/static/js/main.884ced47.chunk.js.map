{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAQ,IAC9BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCLlBG,EAAc,SAAC,GAAqB,EAAnBC,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMC,EAAU,EAAVA,IAEnC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAKG,IAAKJ,IACrB,4BAAIA,Q,uBCNHK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGdN,EAHc,0DAG4CO,UAAUF,GAHtD,sDAIDG,MAAMR,GAJL,cAIdS,EAJc,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXtB,kBAebY,GAfa,4CAAH,sDCIRK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WAEPjB,EAAUC,GACLiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAACb,IAEGc,EDdwBK,CAAcnB,GAAjCU,EAHuB,EAG5BJ,KAAaO,EAHe,EAGfA,QAgBpB,OACI,qCACI,6BAAKb,IAEHa,GAAW,mBAAGjB,UAAU,mCAAb,yBACf,qBAAKA,UAAU,YAAf,SAEUc,EAAOF,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADCA,EAAIhB,aE9BxB2B,EAAe,WAAK,MAGOzC,mBAAS,CAAC,YAHjB,mBAGtB0C,EAHsB,KAGV3C,EAHU,KAW7B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCpBjCsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.884ced47.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        //validacion\r\n        if( inputValue.trim().length >2){\r\n        setCategories( cats => [inputValue, ...cats] );\r\n        setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport const getGifts = async( category) =>{\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category) }&api_key=6GoMdwqLlC6mcGwtN2GHfwhqSNLzzgr5`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","\r\n//import React, { useState, useEffect } from 'react'\r\n//import { getGifts } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    //const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs( category );\r\n    \r\n\r\n    //se ejecuta SOLO cuando se renderiza por primera vez \r\n    /*\r\n    useEffect( () => {\r\n        getGifts( category )\r\n            .then( setImages )\r\n    }, [ category ])\r\n    */\r\n    // hasta aca\r\n\r\n    \r\n\r\n    //getGifts();\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> } \r\n        { <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                       <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                       />\r\n                ))\r\n                }\r\n\r\n            \r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifts } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifts( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n       \r\n    }, [category])\r\n\r\n    return state;\r\n    \r\n}\r\n","\r\nimport React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    //const categorias = ['aviones', 'carros', 'motos'];\r\n    const [categories, setCategories] = useState(['aviones'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     const newElement  = 'barcos';\r\n    //     setCategories( cats => [...categories, newElement] );\r\n    // };\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            {/* {<button onClick={ handleAdd }>Agregar</button>} */}\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} />\r\n                    )\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}